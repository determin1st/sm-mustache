
$_main:
     ; (lines=2, args=0, vars=0, tmps=0)
     ; (after optimizer)
     ; E:\lab\sm-mustache\mustache.php:1-799
0000 DECLARE_CLASS string("sm\mustachecontext")
0001 RETURN int(1)

SM\Mustache::construct:
     ; (lines=84, args=1, vars=4, tmps=2)
     ; (after optimizer)
     ; E:\lab\sm-mustache\mustache.php:28-58
0000 CV0($o) = RECV_INIT 1 array(...)
0001 T4 = FETCH_STATIC_PROP_R string("TEMPLATE") (self) (exception)
0002 T5 = FETCH_DIM_R T4 int(0)
0003 T4 = IS_NOT_IDENTICAL T5 string("f")
0004 JMPZ T4 0024
0005 INIT_FCALL 3 128 string("str_replace")
0006 SEND_VAL string("_") 1
0007 SEND_VAL string("\{\}\[\]\(\)\<\>\:%\=~\-_\?\*@\!\|") 2
0008 T4 = FETCH_STATIC_PROP_R string("DELIMS_EXP") (self) (exception)
0009 SEND_VAL T4 3
0010 V4 = DO_ICALL
0011 ASSIGN_STATIC_PROP string("DELIMS_EXP")
0012 OP_DATA V4
0013 INIT_FCALL 3 128 string("str_replace")
0014 SEND_VAL string("") 1
0015 SEND_VAL string("") 2
0016 INIT_FCALL 1 96 string("trim")
0017 T4 = FETCH_STATIC_PROP_R string("TEMPLATE") (self) (exception)
0018 SEND_VAL T4 1
0019 V4 = DO_ICALL
0020 SEND_VAR V4 3
0021 V4 = DO_ICALL
0022 ASSIGN_STATIC_PROP string("TEMPLATE")
0023 OP_DATA V4
0024 T4 = ISSET_ISEMPTY_DIM_OBJ (isset) CV0($o) string("logger")
0025 JMPZ T4 0028
0026 T4 = FETCH_DIM_R CV0($o) string("logger")
0027 JMP 0029
0028 T4 = QM_ASSIGN null
0029 CV1($a) = QM_ASSIGN T4
0030 T4 = ISSET_ISEMPTY_DIM_OBJ (isset) CV0($o) string("delims")
0031 JMPZ T4 0034
0032 T4 = FETCH_DIM_R CV0($o) string("delims")
0033 JMP 0035
0034 T4 = QM_ASSIGN string("{{ }}")
0035 CV2($b) = QM_ASSIGN T4
0036 T4 = ISSET_ISEMPTY_DIM_OBJ (isset) CV0($o) string("escaper")
0037 JMPZ T4 0049
0038 INIT_FCALL 1 96 string("is_callable")
0039 T4 = FETCH_DIM_R CV0($o) string("escaper")
0040 SEND_VAL T4 1
0041 V4 = DO_ICALL
0042 JMPZ V4 0045
0043 T5 = FETCH_DIM_R CV0($o) string("escaper")
0044 JMP 0047
0045 T4 = FETCH_DIM_R CV0($o) string("escaper")
0046 T5 = BOOL T4
0047 T4 = QM_ASSIGN T5
0048 JMP 0050
0049 T4 = QM_ASSIGN bool(false)
0050 CV3($c) = QM_ASSIGN T4
0051 INIT_STATIC_METHOD_CALL 1 (self) (exception) string("parseDelims")
0052 SEND_VAR CV2($b) 1
0053 V5 = DO_FCALL
0054 ASSIGN CV2($b) V5
0055 JMPNZ CV2($b) 0065
0056 INIT_FCALL 1 96 string("is_callable")
0057 SEND_VAR CV1($a) 1
0058 V4 = DO_ICALL
0059 JMPZ V4 0064
0060 INIT_DYNAMIC_CALL 2 CV1($a)
0061 SEND_VAL_EX string("incorrect delimiters") 1
0062 SEND_VAL_EX int(1) 2
0063 DO_FCALL
0064 RETURN null
0065 V4 = NEW 5 (self) (exception)
0066 SEND_VAR CV1($a) 1
0067 SEND_VAR CV2($b) 2
0068 SEND_VAR CV3($c) 3
0069 T5 = ISSET_ISEMPTY_DIM_OBJ (isset) CV0($o) string("helpers")
0070 JMPZ T5 0073
0071 T5 = FETCH_DIM_R CV0($o) string("helpers")
0072 JMP 0074
0073 T5 = QM_ASSIGN null
0074 SEND_VAL T5 4
0075 T5 = ISSET_ISEMPTY_DIM_OBJ (isset) CV0($o) string("recur")
0076 JMPZ T5 0079
0077 T5 = FETCH_DIM_R CV0($o) string("recur")
0078 JMP 0080
0079 T5 = QM_ASSIGN bool(false)
0080 SEND_VAL T5 5
0081 DO_FCALL
0082 VERIFY_RETURN_TYPE V4
0083 RETURN V4
LIVE RANGES:
     4: 0066 - 0082 (new)
     4: 0082 - 0083 (tmp/var)

SM\Mustache::__construct:
     ; (lines=36, args=5, vars=5, tmps=1)
     ; (after optimizer)
     ; E:\lab\sm-mustache\mustache.php:60-72
0000 CV0($logger) = RECV 1
0001 CV1($delims) = RECV 2
0002 CV2($escaper) = RECV 3
0003 CV3($helpers) = RECV 4
0004 CV4($recur) = RECV 5
0005 ASSIGN_OBJ THIS string("logger")
0006 OP_DATA CV0($logger)
0007 ASSIGN_OBJ THIS string("delims")
0008 OP_DATA CV1($delims)
0009 ASSIGN_OBJ THIS string("escaper")
0010 OP_DATA CV2($escaper)
0011 ASSIGN_OBJ THIS string("helpers")
0012 OP_DATA CV3($helpers)
0013 ASSIGN_OBJ THIS string("recur")
0014 OP_DATA CV4($recur)
0015 V5 = NEW 1 string("SplFixedArray")
0016 SEND_VAL_EX int(65536) 1
0017 DO_FCALL
0018 ASSIGN_OBJ THIS string("cache")
0019 OP_DATA V5
0020 V5 = NEW 1 string("SplFixedArray")
0021 SEND_VAL_EX int(1000) 1
0022 DO_FCALL
0023 ASSIGN_OBJ THIS string("hash")
0024 OP_DATA V5
0025 V5 = NEW 1 string("SplFixedArray")
0026 SEND_VAL_EX int(1000) 1
0027 DO_FCALL
0028 ASSIGN_OBJ THIS string("text")
0029 OP_DATA V5
0030 V5 = NEW 1 string("SplFixedArray")
0031 SEND_VAL_EX int(1000) 1
0032 DO_FCALL
0033 ASSIGN_OBJ THIS string("func")
0034 OP_DATA V5
0035 RETURN null
LIVE RANGES:
     5: 0016 - 0018 (new)
     5: 0021 - 0023 (new)
     5: 0026 - 0028 (new)
     5: 0031 - 0033 (new)

SM\Mustache::parseDelims:
     ; (lines=20, args=1, vars=2, tmps=2)
     ; (after optimizer)
     ; E:\lab\sm-mustache\mustache.php:74-79
0000 CV0($text) = RECV 1
0001 INIT_FCALL 3 128 string("preg_match")
0002 T2 = FETCH_STATIC_PROP_R string("DELIMS_EXP") (self) (exception)
0003 SEND_VAL T2 1
0004 SEND_VAR CV0($text) 2
0005 SEND_REF CV1($x) 3
0006 V2 = DO_ICALL
0007 JMPZ V2 0017
0008 INIT_STATIC_METHOD_CALL 1 string("SplFixedArray") string("fromArray")
0009 T3 = FETCH_DIM_R CV1($x) int(1)
0010 T2 = INIT_ARRAY 2 (packed) T3 NEXT
0011 T3 = FETCH_DIM_R CV1($x) int(3)
0012 T2 = ADD_ARRAY_ELEMENT T3 NEXT
0013 SEND_VAL T2 1
0014 V3 = DO_FCALL
0015 T2 = QM_ASSIGN V3
0016 JMP 0018
0017 T2 = QM_ASSIGN null
0018 VERIFY_RETURN_TYPE T2
0019 RETURN T2
LIVE RANGES:
     2: 0011 - 0013 (tmp/var)
     2: 0018 - 0019 (tmp/var)

SM\Mustache::log:
     ; (lines=9, args=2, vars=3, tmps=0)
     ; (after optimizer)
     ; E:\lab\sm-mustache\mustache.php:81-84
0000 CV0($text) = RECV 1
0001 CV1($level) = RECV_INIT 2 int(0)
0002 CV2($log) = FETCH_OBJ_R THIS string("logger")
0003 JMPZ CV2($log) 0008
0004 INIT_DYNAMIC_CALL 2 CV2($log)
0005 SEND_VAR_EX CV0($text) 1
0006 SEND_VAR_EX CV1($level) 2
0007 DO_FCALL
0008 RETURN null

SM\Mustache::render:
     ; (lines=98, args=3, vars=7, tmps=2)
     ; (after optimizer)
     ; E:\lab\sm-mustache\mustache.php:86-140
0000 CV0($text) = RECV 1
0001 CV1($p1) = RECV 2
0002 CV2($p2) = RECV_INIT 3 null
0003 CV3($log) = FETCH_OBJ_R THIS string("logger")
0004 JMPZ CV3($log) 0009
0005 INIT_DYNAMIC_CALL 2 CV3($log)
0006 SEND_VAL_EX string("test") 1
0007 SEND_VAL_EX int(0) 2
0008 DO_FCALL
0009 T8 = STRLEN CV0($text)
0010 T7 = IS_SMALLER T8 int(5)
0011 JMPZ T7 0014
0012 VERIFY_RETURN_TYPE CV0($text)
0013 RETURN CV0($text)
0014 T7 = TYPE_CHECK (null) CV2($p2)
0015 JMPZ T7 0020
0016 CV2($p2) = QM_ASSIGN CV1($p1)
0017 T7 = FETCH_OBJ_R THIS string("delims")
0018 ASSIGN CV1($p1) T7
0019 JMP 0033
0020 T7 = TYPE_CHECK (string) CV1($p1)
0021 JMPZ T7 0027
0022 INIT_STATIC_METHOD_CALL 1 (self) (exception) string("parseDelims")
0023 SEND_VAR CV1($p1) 1
0024 V8 = DO_UCALL
0025 ASSIGN CV1($p1) V8
0026 JMPNZ CV1($p1) 0033
0027 INIT_METHOD_CALL 2 THIS string("log")
0028 SEND_VAL string("incorrect delimiters") 1
0029 SEND_VAL int(1) 2
0030 DO_FCALL
0031 VERIFY_RETURN_TYPE CV0($text)
0032 RETURN CV0($text)
0033 INIT_FCALL 2 112 string("strpos")
0034 SEND_VAR CV0($text) 1
0035 T7 = FETCH_DIM_R CV1($p1) int(0)
0036 SEND_VAL T7 2
0037 V8 = DO_ICALL
0038 T7 = TYPE_CHECK (false) V8
0039 JMPZ T7 0042
0040 VERIFY_RETURN_TYPE CV0($text)
0041 RETURN CV0($text)
0042 CV4($n) = FETCH_OBJ_R THIS string("total")
0043 T7 = IS_SMALLER_OR_EQUAL int(1000) CV4($n)
0044 JMPZ T7 0051
0045 INIT_METHOD_CALL 2 THIS string("log")
0046 SEND_VAL string("cache overflow") 1
0047 SEND_VAL int(1) 2
0048 DO_FCALL
0049 VERIFY_RETURN_TYPE CV0($text)
0050 RETURN CV0($text)
0051 INIT_METHOD_CALL 2 THIS string("renderFunc")
0052 SEND_VAR CV1($p1) 1
0053 SEND_REF CV0($text) 2
0054 V7 = DO_FCALL
0055 CV5($i) = QM_ASSIGN V7
0056 T7 = BW_NOT CV5($i)
0057 JMPZ T7 0071
0058 T8 = FETCH_OBJ_R THIS string("func")
0059 T7 = FETCH_DIM_R T8 CV5($i)
0060 INIT_DYNAMIC_CALL 1 T7
0061 INIT_STATIC_METHOD_CALL 3 string("SM\MustacheContext") string("construct")
0062 V7 = FETCH_THIS
0063 SEND_VAR_EX V7 1
0064 SEND_VAR_EX CV1($p1) 2
0065 SEND_VAR_EX CV2($p2) 3
0066 V7 = DO_FCALL
0067 SEND_VAR_NO_REF_EX V7 1
0068 V8 = DO_FCALL
0069 T7 = QM_ASSIGN V8
0070 JMP 0072
0071 T7 = QM_ASSIGN string("")
0072 CV6($x) = QM_ASSIGN T7
0073 T7 = IS_IDENTICAL CV5($i) int(-1)
0074 JMPNZ T7 0078
0075 T8 = FETCH_OBJ_R THIS string("delims")
0076 T7 = IS_NOT_IDENTICAL CV1($p1) T8
0077 JMPZ T7 0096
0078 T8 = FETCH_OBJ_R THIS string("total")
0079 T7 = SUB T8 int(1)
0080 ASSIGN CV5($i) T7
0081 JMP 0092
0082 V7 = FETCH_OBJ_W (dim write) THIS string("text")
0083 ASSIGN_DIM V7 CV5($i)
0084 OP_DATA null
0085 V7 = FETCH_OBJ_W (dim write) THIS string("func")
0086 ASSIGN_DIM V7 CV5($i)
0087 OP_DATA null
0088 V7 = FETCH_OBJ_W (dim write) THIS string("hash")
0089 ASSIGN_DIM V7 CV5($i)
0090 OP_DATA null
0091 PRE_DEC CV5($i)
0092 T7 = IS_SMALLER_OR_EQUAL CV4($n) CV5($i)
0093 JMPNZ T7 0082
0094 ASSIGN_OBJ THIS string("total")
0095 OP_DATA CV4($n)
0096 VERIFY_RETURN_TYPE CV6($x)
0097 RETURN CV6($x)

SM\Mustache::renderFunc:
     ; (lines=86, args=4, vars=7, tmps=4)
     ; (after optimizer)
     ; E:\lab\sm-mustache\mustache.php:142-181
0000 CV0($delims) = RECV 1
0001 CV1($text) = RECV 2
0002 CV2($tree) = RECV_INIT 3 null
0003 CV3($depth) = RECV_INIT 4 int(-1)
0004 T8 = FETCH_OBJ_R THIS string("delims")
0005 T7 = IS_IDENTICAL CV0($delims) T8
0006 JMPZ T7 0021
0007 INIT_FCALL 3 128 string("hash")
0008 SEND_VAL string("md4") 1
0009 SEND_VAR CV1($text) 2
0010 SEND_VAL bool(true) 3
0011 V7 = DO_ICALL
0012 ASSIGN CV4($k) V7
0013 INIT_METHOD_CALL 1 THIS string("cacheGet")
0014 SEND_VAR CV4($k) 1
0015 V7 = DO_FCALL
0016 T8 = ASSIGN CV5($i) V7
0017 T7 = TYPE_CHECK TYPE [bool, long, double, string, array, object, resource] T8
0018 JMPZ T7 0022
0019 VERIFY_RETURN_TYPE CV5($i)
0020 RETURN CV5($i)
0021 ASSIGN CV4($k) null
0022 T7 = TYPE_CHECK (null) CV2($tree)
0023 JMPZ T7 0037
0024 INIT_METHOD_CALL 2 THIS string("tokenize")
0025 SEND_VAR CV0($delims) 1
0026 SEND_REF CV1($text) 2
0027 V7 = DO_FCALL
0028 ASSIGN_REF (function) CV2($tree) V7
0029 INIT_METHOD_CALL 2 THIS string("parse")
0030 SEND_REF CV1($text) 1
0031 SEND_REF CV2($tree) 2
0032 V7 = DO_FCALL
0033 ASSIGN_REF (function) CV2($tree) V7
0034 T7 = TYPE_CHECK (null) CV2($tree)
0035 JMPZ T7 0037
0036 RETURN int(-1)
0037 INIT_METHOD_CALL 3 THIS string("compose")
0038 SEND_VAR CV0($delims) 1
0039 SEND_REF CV2($tree) 2
0040 T7 = PRE_INC CV3($depth)
0041 SEND_VAL T7 3
0042 V7 = DO_FCALL
0043 ASSIGN CV6($f) V7
0044 T7 = FETCH_OBJ_R THIS string("total")
0045 ASSIGN CV5($i) T7
0046 INIT_FCALL 4 144 string("sprintf")
0047 T7 = FETCH_STATIC_PROP_R string("TEMPLATE") (self) (exception)
0048 SEND_VAL T7 1
0049 SEND_VAR CV5($i) 2
0050 SEND_VAR CV3($depth) 3
0051 SEND_VAR CV6($f) 4
0052 V7 = DO_ICALL
0053 ASSIGN CV6($f) V7
0054 T9 = ROPE_INIT 3 string("return (")
0055 T9 = ROPE_ADD 1 T9 CV6($f)
0056 T8 = ROPE_END 2 T9 string(");")
0057 V7 = INCLUDE_OR_EVAL (eval) T8
0058 V8 = FETCH_OBJ_W (dim write) THIS string("func")
0059 ASSIGN_DIM V8 CV5($i)
0060 OP_DATA V7
0061 V7 = FETCH_OBJ_W (dim write) THIS string("text")
0062 ASSIGN_DIM V7 CV5($i)
0063 OP_DATA CV1($text)
0064 V7 = FETCH_OBJ_W (dim write) THIS string("hash")
0065 ASSIGN_DIM V7 CV5($i)
0066 OP_DATA CV4($k)
0067 T7 = ADD CV5($i) int(1)
0068 ASSIGN_OBJ THIS string("total")
0069 OP_DATA T7
0070 JMPZ CV4($k) 0081
0071 INIT_METHOD_CALL 2 THIS string("log")
0072 SEND_VAR CV6($f) 1
0073 SEND_VAL int(0) 2
0074 DO_FCALL
0075 JMPZ CV4($k) 0081
0076 INIT_METHOD_CALL 2 THIS string("cacheSet")
0077 SEND_VAR CV4($k) 1
0078 SEND_VAR CV5($i) 2
0079 V7 = DO_FCALL
0080 JMPZ V7 0083
0081 T7 = QM_ASSIGN CV5($i)
0082 JMP 0084
0083 T7 = QM_ASSIGN int(-1)
0084 VERIFY_RETURN_TYPE T7
0085 RETURN T7
LIVE RANGES:
     9: 0054 - 0056 (rope)
     7: 0058 - 0059 (tmp/var)
     7: 0084 - 0085 (tmp/var)

SM\Mustache::cacheGet:
     ; (lines=30, args=1, vars=4, tmps=3)
     ; (after optimizer)
     ; E:\lab\sm-mustache\mustache.php:183-197
0000 CV0($k) = RECV 1
0001 INIT_FCALL 1 96 string("ord")
0002 T4 = FETCH_DIM_R CV0($k) int(1)
0003 SEND_VAL T4 1
0004 V4 = DO_ICALL
0005 T5 = SL V4 int(8)
0006 INIT_FCALL 1 96 string("ord")
0007 T4 = FETCH_DIM_R CV0($k) int(0)
0008 SEND_VAL T4 1
0009 V6 = DO_ICALL
0010 CV1($y) = ADD V6 T5
0011 T5 = FETCH_OBJ_R THIS string("cache")
0012 CV2($x) = FETCH_DIM_R T5 CV1($y)
0013 CV3($i) = QM_ASSIGN int(2)
0014 JMP 0026
0015 T4 = TYPE_CHECK (null) CV2($x)
0016 JMPNZ T4 0028
0017 T4 = TYPE_CHECK (long) CV2($x)
0018 JMPNZ T4 0028
0019 INIT_FCALL 1 96 string("ord")
0020 T4 = FETCH_DIM_R CV0($k) CV3($i)
0021 SEND_VAL T4 1
0022 V5 = DO_ICALL
0023 T4 = FETCH_DIM_R CV2($x) V5
0024 ASSIGN CV2($x) T4
0025 PRE_INC CV3($i)
0026 T4 = IS_SMALLER CV3($i) int(16)
0027 JMPNZ T4 0015
0028 VERIFY_RETURN_TYPE CV2($x)
0029 RETURN CV2($x)

SM\Mustache::cacheSet:
     ; (lines=60, args=2, vars=8, tmps=3)
     ; (after optimizer)
     ; E:\lab\sm-mustache\mustache.php:199-236
0000 CV0($k) = RECV 1
0001 CV1($ki) = RECV 2
0002 CV2($z) = FETCH_OBJ_R THIS string("cache")
0003 INIT_FCALL 1 96 string("ord")
0004 T8 = FETCH_DIM_R CV0($k) int(1)
0005 SEND_VAL T8 1
0006 V8 = DO_ICALL
0007 T9 = SL V8 int(8)
0008 INIT_FCALL 1 96 string("ord")
0009 T8 = FETCH_DIM_R CV0($k) int(0)
0010 SEND_VAL T8 1
0011 V10 = DO_ICALL
0012 CV3($y) = ADD V10 T9
0013 CV4($x) = FETCH_DIM_R CV2($z) CV3($y)
0014 CV5($i) = QM_ASSIGN int(2)
0015 JMP 0053
0016 T8 = TYPE_CHECK (null) CV4($x)
0017 JMPZ T8 0021
0018 ASSIGN_DIM CV2($z) CV3($y)
0019 OP_DATA CV1($ki)
0020 RETURN bool(true)
0021 T8 = TYPE_CHECK (long) CV4($x)
0022 JMPZ T8 0044
0023 T9 = FETCH_OBJ_R THIS string("total")
0024 T8 = IS_SMALLER_OR_EQUAL T9 CV4($x)
0025 JMPZ T8 0029
0026 ASSIGN_DIM CV2($z) CV3($y)
0027 OP_DATA CV1($ki)
0028 RETURN bool(true)
0029 V8 = NEW 1 string("SplFixedArray")
0030 SEND_VAL_EX int(256) 1
0031 DO_FCALL
0032 ASSIGN CV6($b) V8
0033 T9 = FETCH_OBJ_R THIS string("hash")
0034 T8 = FETCH_DIM_R T9 CV4($x)
0035 ASSIGN CV7($a) T8
0036 INIT_FCALL 1 96 string("ord")
0037 T8 = FETCH_DIM_R CV7($a) CV5($i)
0038 SEND_VAL T8 1
0039 V8 = DO_ICALL
0040 ASSIGN_DIM CV6($b) V8
0041 OP_DATA CV4($x)
0042 ASSIGN_DIM CV2($z) CV3($y)
0043 OP_DATA CV6($b)
0044 T8 = FETCH_DIM_R CV2($z) CV3($y)
0045 ASSIGN CV2($z) T8
0046 INIT_FCALL 1 96 string("ord")
0047 T8 = FETCH_DIM_R CV0($k) CV5($i)
0048 SEND_VAL T8 1
0049 CV3($y) = DO_ICALL
0050 T8 = FETCH_DIM_R CV2($z) CV3($y)
0051 ASSIGN CV4($x) T8
0052 PRE_INC CV5($i)
0053 T8 = IS_SMALLER CV5($i) int(16)
0054 JMPNZ T8 0016
0055 INIT_METHOD_CALL 2 THIS string("log")
0056 SEND_VAL string("hash collision") 1
0057 SEND_VAL int(1) 2
0058 DO_FCALL
0059 RETURN bool(false)
LIVE RANGES:
     8: 0030 - 0032 (new)

SM\Mustache::tokenize:
     ; (lines=370, args=2, vars=14, tmps=4)
     ; (after optimizer)
     ; E:\lab\sm-mustache\mustache.php:238-416
0000 CV0($delims) = RECV 1
0001 CV1($text) = RECV 2
0002 CV2($tokens) = QM_ASSIGN array(...)
0003 T15 = FETCH_DIM_R CV0($delims) int(0)
0004 CV3($size0) = STRLEN T15
0005 T15 = FETCH_DIM_R CV0($delims) int(1)
0006 CV4($size1) = STRLEN T15
0007 CV5($length) = STRLEN CV1($text)
0008 T14 = ASSIGN CV9($line) int(0)
0009 T14 = ASSIGN CV7($i0) int(0)
0010 CV6($i) = QM_ASSIGN int(0)
0011 JMP 0267
0012 INIT_FCALL 3 128 string("strpos")
0013 SEND_VAR CV1($text) 1
0014 SEND_VAL string("
") 2
0015 SEND_VAR CV7($i0) 3
0016 CV10($a) = DO_ICALL
0017 INIT_FCALL 3 128 string("strpos")
0018 SEND_VAR CV1($text) 1
0019 T14 = FETCH_DIM_R CV0($delims) int(0)
0020 SEND_VAL T14 2
0021 SEND_VAR CV7($i0) 3
0022 CV11($b) = DO_ICALL
0023 T14 = TYPE_CHECK (false) CV11($b)
0024 JMPZ T14 0073
0025 T14 = TYPE_CHECK TYPE [null, true, long, double, string, array, object, resource] CV10($a)
0026 JMPZ T14 0042
0027 T15 = POST_INC CV6($i)
0028 T14 = INIT_ARRAY 3 (packed) string("") NEXT
0029 INIT_FCALL 3 128 string("substr")
0030 SEND_VAR CV1($text) 1
0031 SEND_VAR CV7($i0) 2
0032 T17 = SUB CV10($a) CV7($i0)
0033 T16 = ADD T17 int(1)
0034 SEND_VAL T16 3
0035 V16 = DO_ICALL
0036 T14 = ADD_ARRAY_ELEMENT V16 NEXT
0037 T16 = POST_INC CV9($line)
0038 T14 = ADD_ARRAY_ELEMENT T16 NEXT
0039 ASSIGN_DIM CV2($tokens) T15
0040 OP_DATA T14
0041 CV7($i0) = ADD CV10($a) int(1)
0042 T15 = POST_INC CV6($i)
0043 T14 = INIT_ARRAY 3 (packed) string("") NEXT
0044 INIT_FCALL 2 112 string("substr")
0045 SEND_VAR CV1($text) 1
0046 SEND_VAR CV7($i0) 2
0047 V16 = DO_ICALL
0048 T14 = ADD_ARRAY_ELEMENT V16 NEXT
0049 T14 = ADD_ARRAY_ELEMENT CV9($line) NEXT
0050 ASSIGN_DIM CV2($tokens) T15
0051 OP_DATA T14
0052 JMP 0269
0053 CV8($i1) = ADD CV10($a) int(1)
0054 T15 = POST_INC CV6($i)
0055 T14 = INIT_ARRAY 3 (packed) string("") NEXT
0056 INIT_FCALL 3 128 string("substr")
0057 SEND_VAR CV1($text) 1
0058 SEND_VAR CV7($i0) 2
0059 T16 = SUB CV8($i1) CV7($i0)
0060 SEND_VAL T16 3
0061 V16 = DO_ICALL
0062 T14 = ADD_ARRAY_ELEMENT V16 NEXT
0063 T16 = POST_INC CV9($line)
0064 T14 = ADD_ARRAY_ELEMENT T16 NEXT
0065 ASSIGN_DIM CV2($tokens) T15
0066 OP_DATA T14
0067 INIT_FCALL 3 128 string("strpos")
0068 SEND_VAR CV1($text) 1
0069 SEND_VAL string("
") 2
0070 T14 = ASSIGN CV7($i0) CV8($i1)
0071 SEND_VAL T14 3
0072 CV10($a) = DO_ICALL
0073 T14 = TYPE_CHECK TYPE [null, true, long, double, string, array, object, resource] CV10($a)
0074 JMPZ T14 0077
0075 T14 = IS_SMALLER CV10($a) CV11($b)
0076 JMPNZ T14 0053
0077 T14 = IS_SMALLER CV7($i0) CV11($b)
0078 JMPZ T14 0103
0079 INIT_FCALL 3 128 string("substr")
0080 SEND_VAR CV1($text) 1
0081 SEND_VAR CV7($i0) 2
0082 T14 = SUB CV11($b) CV7($i0)
0083 SEND_VAL T14 3
0084 V14 = DO_ICALL
0085 ASSIGN CV12($c) V14
0086 T15 = POST_INC CV6($i)
0087 T14 = INIT_ARRAY 3 (packed) string("") NEXT
0088 T14 = ADD_ARRAY_ELEMENT CV12($c) NEXT
0089 T14 = ADD_ARRAY_ELEMENT CV9($line) NEXT
0090 ASSIGN_DIM CV2($tokens) T15
0091 OP_DATA T14
0092 INIT_FCALL 2 112 string("trim")
0093 SEND_VAR CV12($c) 1
0094 SEND_VAL string(" 	") 2
0095 V14 = DO_ICALL
0096 JMPZ V14 0099
0097 T14 = QM_ASSIGN int(-1)
0098 JMP 0100
0099 T14 = STRLEN CV12($c)
0100 CV13($indent) = QM_ASSIGN T14
0101 CV7($i0) = QM_ASSIGN CV11($b)
0102 JMP 0104
0103 CV13($indent) = QM_ASSIGN int(0)
0104 CV11($b) = ADD CV11($b) CV3($size0)
0105 INIT_FCALL 3 128 string("strpos")
0106 SEND_VAR CV1($text) 1
0107 T14 = FETCH_DIM_R CV0($delims) int(1)
0108 SEND_VAL T14 2
0109 SEND_VAR CV11($b) 3
0110 CV10($a) = DO_ICALL
0111 T14 = TYPE_CHECK (false) CV10($a)
0112 JMPNZ T14 0143
0113 INIT_FCALL 2 112 string("trim")
0114 INIT_FCALL 3 128 string("substr")
0115 SEND_VAR CV1($text) 1
0116 SEND_VAR CV11($b) 2
0117 T15 = SUB CV10($a) CV11($b)
0118 SEND_VAL T15 3
0119 V15 = DO_ICALL
0120 SEND_VAR V15 1
0121 SEND_VAL string(" ") 2
0122 V16 = DO_ICALL
0123 ASSIGN CV12($c) V16
0124 JMPZ CV12($c) 0143
0125 INIT_FCALL 1 96 string("ctype_alnum")
0126 T15 = FETCH_DIM_R CV12($c) int(0)
0127 SEND_VAL T15 1
0128 V15 = DO_ICALL
0129 JMPNZ V15 0137
0130 INIT_FCALL 2 112 string("strpos")
0131 SEND_VAL string("#^|/.&!") 1
0132 T15 = FETCH_DIM_R CV12($c) int(0)
0133 SEND_VAL T15 2
0134 V15 = DO_ICALL
0135 T14 = TYPE_CHECK (false) V15
0136 JMPNZ T14 0143
0137 T16 = STRLEN CV12($c)
0138 T15 = IS_SMALLER int(32) T16
0139 JMPZ T15 0171
0140 T15 = FETCH_DIM_R CV12($c) int(0)
0141 T14 = IS_NOT_IDENTICAL T15 string("!")
0142 JMPZ T14 0171
0143 INIT_METHOD_CALL 2 THIS string("log")
0144 SEND_VAL string("false tag skipped") 1
0145 SEND_VAL int(0) 2
0146 DO_FCALL
0147 JMPZ CV6($i) 0162
0148 T14 = SUB CV6($i) int(1)
0149 T15 = FETCH_DIM_R CV2($tokens) T14
0150 T14 = FETCH_DIM_R T15 int(0)
0151 JMPNZ T14 0162
0152 INIT_FCALL 2 112 string("substr")
0153 T14 = SUB CV6($i) int(1)
0154 T15 = FETCH_DIM_R CV2($tokens) T14
0155 T14 = FETCH_DIM_R T15 int(1)
0156 SEND_VAL T14 1
0157 SEND_VAL int(-1) 2
0158 V15 = DO_ICALL
0159 T14 = IS_IDENTICAL V15 string("
")
0160 JMPZ T14 0162
0161 PRE_INC CV9($line)
0162 T15 = POST_INC CV6($i)
0163 T14 = INIT_ARRAY 3 (packed) string("") NEXT
0164 T16 = FETCH_DIM_R CV0($delims) int(0)
0165 T14 = ADD_ARRAY_ELEMENT T16 NEXT
0166 T14 = ADD_ARRAY_ELEMENT CV9($line) NEXT
0167 ASSIGN_DIM CV2($tokens) T15
0168 OP_DATA T14
0169 CV7($i0) = QM_ASSIGN CV11($b)
0170 JMP 0267
0171 CV8($i1) = ADD CV10($a) CV4($size1)
0172 T14 = FETCH_DIM_R CV12($c) int(0)
0173 SWITCH_STRING T14 "#": 0186, "^": 0186, "|": 0204, "/": 0222, "!": 0239, "&": 0247, default: 0258
0174 T15 = CASE T14 string("#")
0175 JMPNZ T15 0186
0176 T15 = CASE T14 string("^")
0177 JMPNZ T15 0186
0178 T15 = CASE T14 string("|")
0179 JMPNZ T15 0204
0180 T15 = CASE T14 string("/")
0181 JMPNZ T15 0222
0182 T15 = CASE T14 string("!")
0183 JMPNZ T15 0239
0184 T15 = CASE T14 string("&")
0185 JMPZNZ T15 0258 0247
0186 T16 = POST_INC CV6($i)
0187 T17 = FETCH_DIM_R CV12($c) int(0)
0188 T15 = INIT_ARRAY 5 (packed) T17 NEXT
0189 INIT_FCALL 2 112 string("ltrim")
0190 INIT_FCALL 2 112 string("substr")
0191 SEND_VAR CV12($c) 1
0192 SEND_VAL int(1) 2
0193 V17 = DO_ICALL
0194 SEND_VAR V17 1
0195 SEND_VAL string(" ") 2
0196 V17 = DO_ICALL
0197 T15 = ADD_ARRAY_ELEMENT V17 NEXT
0198 T15 = ADD_ARRAY_ELEMENT CV9($line) NEXT
0199 T15 = ADD_ARRAY_ELEMENT CV13($indent) NEXT
0200 T15 = ADD_ARRAY_ELEMENT CV8($i1) NEXT
0201 ASSIGN_DIM CV2($tokens) T16
0202 OP_DATA T15
0203 JMP 0265
0204 T16 = POST_INC CV6($i)
0205 T15 = INIT_ARRAY 6 (packed) string("|") NEXT
0206 INIT_FCALL 2 112 string("ltrim")
0207 INIT_FCALL 2 112 string("substr")
0208 SEND_VAR CV12($c) 1
0209 SEND_VAL int(1) 2
0210 V17 = DO_ICALL
0211 SEND_VAR V17 1
0212 SEND_VAL string(" ") 2
0213 V17 = DO_ICALL
0214 T15 = ADD_ARRAY_ELEMENT V17 NEXT
0215 T15 = ADD_ARRAY_ELEMENT CV9($line) NEXT
0216 T15 = ADD_ARRAY_ELEMENT CV13($indent) NEXT
0217 T15 = ADD_ARRAY_ELEMENT CV7($i0) NEXT
0218 T15 = ADD_ARRAY_ELEMENT CV8($i1) NEXT
0219 ASSIGN_DIM CV2($tokens) T16
0220 OP_DATA T15
0221 JMP 0265
0222 T16 = POST_INC CV6($i)
0223 T15 = INIT_ARRAY 5 (packed) string("/") NEXT
0224 INIT_FCALL 2 112 string("ltrim")
0225 INIT_FCALL 2 112 string("substr")
0226 SEND_VAR CV12($c) 1
0227 SEND_VAL int(1) 2
0228 V17 = DO_ICALL
0229 SEND_VAR V17 1
0230 SEND_VAL string(" ") 2
0231 V17 = DO_ICALL
0232 T15 = ADD_ARRAY_ELEMENT V17 NEXT
0233 T15 = ADD_ARRAY_ELEMENT CV9($line) NEXT
0234 T15 = ADD_ARRAY_ELEMENT CV13($indent) NEXT
0235 T15 = ADD_ARRAY_ELEMENT CV7($i0) NEXT
0236 ASSIGN_DIM CV2($tokens) T16
0237 OP_DATA T15
0238 JMP 0265
0239 T16 = POST_INC CV6($i)
0240 T15 = INIT_ARRAY 4 (packed) string("!") NEXT
0241 T15 = ADD_ARRAY_ELEMENT string("") NEXT
0242 T15 = ADD_ARRAY_ELEMENT CV9($line) NEXT
0243 T15 = ADD_ARRAY_ELEMENT CV13($indent) NEXT
0244 ASSIGN_DIM CV2($tokens) T16
0245 OP_DATA T15
0246 JMP 0265
0247 T16 = FETCH_DIM_R CV12($c) int(0)
0248 INIT_FCALL 2 112 string("ltrim")
0249 INIT_FCALL 2 112 string("substr")
0250 SEND_VAR CV12($c) 1
0251 SEND_VAL int(1) 2
0252 V15 = DO_ICALL
0253 SEND_VAR V15 1
0254 SEND_VAL string(" ") 2
0255 V17 = DO_ICALL
0256 T15 = FAST_CONCAT T16 V17
0257 ASSIGN CV12($c) T15
0258 T16 = POST_INC CV6($i)
0259 T15 = INIT_ARRAY 4 (packed) string("_") NEXT
0260 T15 = ADD_ARRAY_ELEMENT CV12($c) NEXT
0261 T15 = ADD_ARRAY_ELEMENT CV9($line) NEXT
0262 T15 = ADD_ARRAY_ELEMENT CV13($indent) NEXT
0263 ASSIGN_DIM CV2($tokens) T16
0264 OP_DATA T15
0265 FREE T14
0266 CV7($i0) = QM_ASSIGN CV8($i1)
0267 T14 = IS_SMALLER CV7($i0) CV5($length)
0268 JMPNZ T14 0012
0269 T15 = ASSIGN CV4($size1) int(0)
0270 T14 = ASSIGN CV3($size0) int(0)
0271 CV9($line) = QM_ASSIGN int(0)
0272 CV5($length) = QM_ASSIGN CV6($i)
0273 CV6($i) = QM_ASSIGN int(0)
0274 JMP 0365
0275 T14 = IS_SMALLER CV6($i) CV5($length)
0276 JMPZ T14 0283
0277 T16 = FETCH_DIM_R CV2($tokens) CV6($i)
0278 T15 = FETCH_DIM_R T16 int(2)
0279 T14 = IS_IDENTICAL CV9($line) T15
0280 JMPZ T14 0283
0281 PRE_INC CV3($size0)
0282 JMP 0353
0283 JMPZ CV4($size1) 0346
0284 T15 = SUB CV3($size0) CV4($size1)
0285 ASSIGN CV12($c) T15
0286 JMPZ CV12($c) 0346
0287 T14 = IS_SMALLER_OR_EQUAL CV12($c) int(2)
0288 JMPZ T14 0346
0289 T14 = SUB CV6($i) CV3($size0)
0290 ASSIGN CV10($a) T14
0291 CV11($b) = SUB CV6($i) int(1)
0292 T14 = IS_IDENTICAL CV12($c) int(1)
0293 JMPZ T14 0322
0294 T15 = FETCH_DIM_R CV2($tokens) CV11($b)
0295 T14 = FETCH_DIM_R T15 int(0)
0296 JMPNZ T14 0307
0297 INIT_FCALL 1 96 string("ctype_space")
0298 T15 = FETCH_DIM_R CV2($tokens) CV11($b)
0299 T14 = FETCH_DIM_R T15 int(1)
0300 SEND_VAL T14 1
0301 V14 = DO_ICALL
0302 JMPZ V14 0307
0303 V14 = FETCH_DIM_W CV2($tokens) CV11($b)
0304 ASSIGN_DIM V14 int(1)
0305 OP_DATA string("")
0306 JMP 0346
0307 T14 = IS_IDENTICAL CV6($i) CV5($length)
0308 JMPZ T14 0346
0309 T15 = FETCH_DIM_R CV2($tokens) CV10($a)
0310 T14 = FETCH_DIM_R T15 int(0)
0311 JMPNZ T14 0346
0312 INIT_FCALL 1 96 string("ctype_space")
0313 T15 = FETCH_DIM_R CV2($tokens) CV10($a)
0314 T14 = FETCH_DIM_R T15 int(1)
0315 SEND_VAL T14 1
0316 V14 = DO_ICALL
0317 JMPZ V14 0346
0318 V14 = FETCH_DIM_W CV2($tokens) CV10($a)
0319 ASSIGN_DIM V14 int(1)
0320 OP_DATA string("")
0321 JMP 0367
0322 T15 = FETCH_DIM_R CV2($tokens) CV10($a)
0323 T14 = FETCH_DIM_R T15 int(0)
0324 JMPNZ T14 0346
0325 T15 = FETCH_DIM_R CV2($tokens) CV11($b)
0326 T14 = FETCH_DIM_R T15 int(0)
0327 JMPNZ T14 0346
0328 INIT_FCALL 1 96 string("ctype_space")
0329 T15 = FETCH_DIM_R CV2($tokens) CV10($a)
0330 T14 = FETCH_DIM_R T15 int(1)
0331 SEND_VAL T14 1
0332 V14 = DO_ICALL
0333 JMPZ V14 0346
0334 INIT_FCALL 1 96 string("ctype_space")
0335 T15 = FETCH_DIM_R CV2($tokens) CV11($b)
0336 T14 = FETCH_DIM_R T15 int(1)
0337 SEND_VAL T14 1
0338 V14 = DO_ICALL
0339 JMPZ V14 0346
0340 V15 = FETCH_DIM_W CV2($tokens) CV11($b)
0341 T14 = ASSIGN_DIM V15 int(1)
0342 OP_DATA string("")
0343 V15 = FETCH_DIM_W CV2($tokens) CV10($a)
0344 ASSIGN_DIM V15 int(1)
0345 OP_DATA T14
0346 T14 = IS_IDENTICAL CV6($i) CV5($length)
0347 JMPNZ T14 0367
0348 T15 = FETCH_DIM_R CV2($tokens) CV6($i)
0349 T14 = FETCH_DIM_R T15 int(2)
0350 ASSIGN CV9($line) T14
0351 CV3($size0) = QM_ASSIGN int(1)
0352 CV4($size1) = QM_ASSIGN int(0)
0353 T14 = FETCH_DIM_R CV2($tokens) CV6($i)
0354 T15 = FETCH_DIM_R T14 int(0)
0355 ASSIGN CV10($a) T15
0356 JMPZ CV10($a) 0364
0357 INIT_FCALL 2 112 string("strpos")
0358 SEND_VAL string("#^|/!") 1
0359 SEND_VAR CV10($a) 2
0360 V15 = DO_ICALL
0361 T14 = TYPE_CHECK TYPE [null, true, long, double, string, array, object, resource] V15
0362 JMPZ T14 0364
0363 PRE_INC CV4($size1)
0364 PRE_INC CV6($i)
0365 T14 = IS_SMALLER_OR_EQUAL CV6($i) CV5($length)
0366 JMPNZ T14 0275
0367 ASSIGN_DIM CV2($tokens) NEXT
0368 OP_DATA null
0369 RETURN_BY_REF CV2($tokens)
LIVE RANGES:
     14: 0029 - 0039 (tmp/var)
     14: 0044 - 0050 (tmp/var)
     14: 0056 - 0065 (tmp/var)
     14: 0088 - 0090 (tmp/var)
     14: 0164 - 0167 (tmp/var)
     14: 0173 - 0265 (tmp/var)
     15: 0189 - 0201 (tmp/var)
     15: 0206 - 0219 (tmp/var)
     15: 0224 - 0236 (tmp/var)
     15: 0241 - 0244 (tmp/var)
     16: 0248 - 0256 (tmp/var)
     15: 0260 - 0263 (tmp/var)
     14: 0342 - 0344 (tmp/var)

SM\Mustache::parse:
     ; (lines=139, args=4, vars=8, tmps=4)
     ; (after optimizer)
     ; E:\lab\sm-mustache\mustache.php:418-488
0000 CV0($text) = RECV 1
0001 CV1($tokens) = RECV 2
0002 CV2($i) = RECV_INIT 3 int(0)
0003 CV3($p) = RECV_INIT 4 null
0004 T8 = TYPE_CHECK (null) CV3($p)
0005 JMPZ T8 0008
0006 T8 = QM_ASSIGN int(-1)
0007 JMP 0009
0008 T8 = FETCH_DIM_R CV3($p) int(4)
0009 CV4($from) = QM_ASSIGN T8
0010 CV5($tree) = QM_ASSIGN array(...)
0011 CV6($size) = QM_ASSIGN int(0)
0012 JMP 0121
0013 T8 = FETCH_DIM_R CV7($t) int(0)
0014 SWITCH_STRING T8 "#": 0023, "^": 0023, "|": 0041, "/": 0073, default: 0115
0015 T9 = CASE T8 string("#")
0016 JMPNZ T9 0023
0017 T9 = CASE T8 string("^")
0018 JMPNZ T9 0023
0019 T9 = CASE T8 string("|")
0020 JMPNZ T9 0041
0021 T9 = CASE T8 string("/")
0022 JMPZNZ T9 0115 0073
0023 ASSIGN_DIM CV7($t) int(5)
0024 OP_DATA array(...)
0025 INIT_METHOD_CALL 4 THIS string("parse")
0026 SEND_REF CV0($text) 1
0027 SEND_REF CV1($tokens) 2
0028 SEND_REF CV2($i) 3
0029 SEND_REF CV7($t) 4
0030 V9 = DO_FCALL
0031 JMPNZ V9 0035
0032 T9 = VERIFY_RETURN_TYPE null
0033 FREE T8
0034 RETURN_BY_REF (value) T9
0035 T9 = FETCH_DIM_R CV7($t) int(4)
0036 JMPZ T9 0120
0037 T10 = POST_INC CV6($size)
0038 V9 = FETCH_DIM_W CV5($tree) T10
0039 ASSIGN_REF V9 CV7($t)
0040 JMP 0120
0041 T9 = TYPE_CHECK (null) CV3($p)
0042 JMPZ T9 0055
0043 INIT_METHOD_CALL 2 THIS string("log")
0044 T10 = FETCH_DIM_R CV7($t) int(1)
0045 T9 = CONCAT string("unexpected else: ") T10
0046 T10 = FAST_CONCAT T9 string(" at line ")
0047 T11 = FETCH_DIM_R CV7($t) int(2)
0048 T9 = CONCAT T10 T11
0049 SEND_VAL T9 1
0050 SEND_VAL int(1) 2
0051 DO_FCALL
0052 T9 = VERIFY_RETURN_TYPE null
0053 FREE T8
0054 RETURN_BY_REF (value) T9
0055 INIT_FCALL 3 128 string("substr")
0056 SEND_VAR CV0($text) 1
0057 SEND_VAR CV4($from) 2
0058 T10 = FETCH_DIM_R CV7($t) int(4)
0059 T9 = SUB T10 CV4($from)
0060 SEND_VAL T9 3
0061 V9 = DO_ICALL
0062 V10 = FETCH_DIM_W CV3($p) int(5)
0063 ASSIGN_DIM V10 NEXT
0064 OP_DATA V9
0065 V9 = FETCH_DIM_W CV3($p) int(5)
0066 ASSIGN_DIM V9 NEXT
0067 OP_DATA CV5($tree)
0068 T9 = FETCH_DIM_R CV7($t) int(5)
0069 ASSIGN CV4($from) T9
0070 ASSIGN CV5($tree) array(...)
0071 CV6($size) = QM_ASSIGN int(0)
0072 JMP 0120
0073 T9 = TYPE_CHECK (null) CV3($p)
0074 JMPNZ T9 0079
0075 T10 = FETCH_DIM_R CV7($t) int(1)
0076 T11 = FETCH_DIM_R CV3($p) int(1)
0077 T9 = IS_NOT_IDENTICAL T10 T11
0078 JMPZ T9 0091
0079 INIT_METHOD_CALL 2 THIS string("log")
0080 T10 = FETCH_DIM_R CV7($t) int(1)
0081 T9 = CONCAT string("unexpected close: ") T10
0082 T10 = FAST_CONCAT T9 string(" at line ")
0083 T11 = FETCH_DIM_R CV7($t) int(2)
0084 T9 = CONCAT T10 T11
0085 SEND_VAL T9 1
0086 SEND_VAL int(1) 2
0087 DO_FCALL
0088 T9 = VERIFY_RETURN_TYPE null
0089 FREE T8
0090 RETURN_BY_REF (value) T9
0091 JMPZ CV6($size) 0110
0092 INIT_FCALL 3 128 string("substr")
0093 SEND_VAR CV0($text) 1
0094 SEND_VAR CV4($from) 2
0095 T10 = FETCH_DIM_R CV7($t) int(4)
0096 T9 = SUB T10 CV4($from)
0097 SEND_VAL T9 3
0098 V9 = DO_ICALL
0099 V10 = FETCH_DIM_W CV3($p) int(5)
0100 ASSIGN_DIM V10 NEXT
0101 OP_DATA V9
0102 V10 = FETCH_DIM_W CV3($p) int(5)
0103 V9 = FETCH_DIM_W V10 NEXT
0104 ASSIGN_REF V9 CV5($tree)
0105 T10 = FETCH_DIM_R CV3($p) int(5)
0106 T9 = COUNT T10
0107 ASSIGN_DIM CV3($p) int(4)
0108 OP_DATA T9
0109 JMP 0112
0110 ASSIGN_DIM CV3($p) int(4)
0111 OP_DATA int(0)
0112 VERIFY_RETURN_TYPE CV3($p)
0113 FREE T8
0114 RETURN_BY_REF CV3($p)
0115 T9 = FETCH_DIM_R CV7($t) int(1)
0116 JMPZ T9 0120
0117 T10 = POST_INC CV6($size)
0118 V9 = FETCH_DIM_W CV5($tree) T10
0119 ASSIGN_REF V9 CV7($t)
0120 FREE T8
0121 T8 = POST_INC CV2($i)
0122 V9 = FETCH_DIM_W CV1($tokens) T8
0123 V8 = ASSIGN_REF CV7($t) V9
0124 JMPNZ V8 0013
0125 T8 = TYPE_CHECK TYPE [bool, long, double, string, array, object, resource] CV3($p)
0126 JMPZ T8 0138
0127 INIT_METHOD_CALL 2 THIS string("log")
0128 T9 = FETCH_DIM_R CV3($p) int(1)
0129 T8 = CONCAT string("missing close: ") T9
0130 T9 = FAST_CONCAT T8 string(" at line ")
0131 T10 = FETCH_DIM_R CV3($p) int(2)
0132 T8 = CONCAT T9 T10
0133 SEND_VAL T8 1
0134 SEND_VAL int(1) 2
0135 DO_FCALL
0136 T8 = VERIFY_RETURN_TYPE null
0137 RETURN_BY_REF (value) T8
0138 RETURN_BY_REF CV5($tree)
LIVE RANGES:
     8: 0014 - 0120 (tmp/var)
     9: 0033 - 0034 (tmp/var)
     10: 0047 - 0048 (tmp/var)
     9: 0053 - 0054 (tmp/var)
     9: 0062 - 0063 (tmp/var)
     10: 0076 - 0077 (tmp/var)
     10: 0083 - 0084 (tmp/var)
     9: 0089 - 0090 (tmp/var)
     9: 0099 - 0100 (tmp/var)
     9: 0131 - 0132 (tmp/var)

SM\Mustache::compose:
     ; (lines=126, args=3, vars=7, tmps=5)
     ; (after optimizer)
     ; E:\lab\sm-mustache\mustache.php:490-535
0000 CV0($delims) = RECV 1
0001 CV1($tree) = RECV 2
0002 CV2($depth) = RECV 3
0003 CV3($code) = QM_ASSIGN string("")
0004 V7 = FE_RESET_RW CV1($tree) 0109
0005 FE_FETCH_RW V7 CV4($t) 0109
0006 T8 = FETCH_DIM_R CV4($t) int(0)
0007 SWITCH_STRING T8 "": 0016, "_": 0049, "#": 0054, "^": 0081, default: 0107
0008 T9 = CASE T8 string("")
0009 JMPNZ T9 0016
0010 T9 = CASE T8 string("_")
0011 JMPNZ T9 0049
0012 T9 = CASE T8 string("#")
0013 JMPNZ T9 0054
0014 T9 = CASE T8 string("^")
0015 JMPZNZ T9 0107 0081
0016 INIT_FCALL 2 112 string("strpos")
0017 T9 = FETCH_DIM_R CV4($t) int(1)
0018 SEND_VAL T9 1
0019 SEND_VAL string("\") 2
0020 V10 = DO_ICALL
0021 T9 = TYPE_CHECK TYPE [null, true, long, double, string, array, object, resource] V10
0022 JMPZ T9 0031
0023 INIT_FCALL 3 128 string("str_replace")
0024 SEND_VAL string("\") 1
0025 SEND_VAL string("\\") 2
0026 T9 = FETCH_DIM_R CV4($t) int(1)
0027 SEND_VAL T9 3
0028 V9 = DO_ICALL
0029 ASSIGN_DIM CV4($t) int(1)
0030 OP_DATA V9
0031 INIT_FCALL 2 112 string("strpos")
0032 T9 = FETCH_DIM_R CV4($t) int(1)
0033 SEND_VAL T9 1
0034 SEND_VAL string("$") 2
0035 V10 = DO_ICALL
0036 T9 = TYPE_CHECK TYPE [null, true, long, double, string, array, object, resource] V10
0037 JMPZ T9 0046
0038 INIT_FCALL 3 128 string("str_replace")
0039 SEND_VAL string("$") 1
0040 SEND_VAL string("\$") 2
0041 T9 = FETCH_DIM_R CV4($t) int(1)
0042 SEND_VAL T9 3
0043 V9 = DO_ICALL
0044 ASSIGN_DIM CV4($t) int(1)
0045 OP_DATA V9
0046 T9 = FETCH_DIM_R CV4($t) int(1)
0047 ASSIGN_OP (CONCAT) CV3($code) T9
0048 JMP 0107
0049 T9 = FETCH_DIM_R CV4($t) int(1)
0050 T10 = CONCAT string("{$x('") T9
0051 T9 = FAST_CONCAT T10 string("')}")
0052 ASSIGN_OP (CONCAT) CV3($code) T9
0053 JMP 0107
0054 ASSIGN CV5($x) string("")
0055 CV6($i) = QM_ASSIGN int(0)
0056 JMP 0071
0057 INIT_METHOD_CALL 4 THIS string("renderFunc")
0058 SEND_VAR CV0($delims) 1
0059 V10 = FETCH_DIM_W CV4($t) int(5)
0060 V9 = FETCH_DIM_W V10 CV6($i)
0061 SEND_REF V9 2
0062 T11 = ADD CV6($i) int(1)
0063 V10 = FETCH_DIM_W CV4($t) int(5)
0064 V9 = FETCH_DIM_W V10 T11
0065 SEND_REF V9 3
0066 SEND_VAR CV2($depth) 4
0067 V10 = DO_FCALL
0068 T9 = CONCAT string(",") V10
0069 ASSIGN_OP (CONCAT) CV5($x) T9
0070 CV6($i) = ADD CV6($i) int(2)
0071 T10 = FETCH_DIM_R CV4($t) int(4)
0072 T9 = IS_SMALLER CV6($i) T10
0073 JMPNZ T9 0057
0074 T9 = FETCH_DIM_R CV4($t) int(1)
0075 T10 = CONCAT string("{$x->f('") T9
0076 T9 = FAST_CONCAT T10 string("',0")
0077 T10 = FAST_CONCAT T9 CV5($x)
0078 T9 = FAST_CONCAT T10 string(")}")
0079 ASSIGN_OP (CONCAT) CV3($code) T9
0080 JMP 0107
0081 ASSIGN CV5($x) string("")
0082 CV6($i) = QM_ASSIGN int(0)
0083 JMP 0098
0084 INIT_METHOD_CALL 4 THIS string("renderFunc")
0085 SEND_VAR CV0($delims) 1
0086 V10 = FETCH_DIM_W CV4($t) int(5)
0087 V9 = FETCH_DIM_W V10 CV6($i)
0088 SEND_REF V9 2
0089 T11 = ADD CV6($i) int(1)
0090 V10 = FETCH_DIM_W CV4($t) int(5)
0091 V9 = FETCH_DIM_W V10 T11
0092 SEND_REF V9 3
0093 SEND_VAR CV2($depth) 4
0094 V10 = DO_FCALL
0095 T9 = CONCAT string(",") V10
0096 ASSIGN_OP (CONCAT) CV5($x) T9
0097 CV6($i) = ADD CV6($i) int(2)
0098 T10 = FETCH_DIM_R CV4($t) int(4)
0099 T9 = IS_SMALLER CV6($i) T10
0100 JMPNZ T9 0084
0101 T9 = FETCH_DIM_R CV4($t) int(1)
0102 T10 = CONCAT string("{$x->f('") T9
0103 T9 = FAST_CONCAT T10 string("',1")
0104 T10 = FAST_CONCAT T9 CV5($x)
0105 T9 = FAST_CONCAT T10 string(")}")
0106 ASSIGN_OP (CONCAT) CV3($code) T9
0107 FREE T8
0108 JMP 0005
0109 FE_FREE V7
0110 INIT_FCALL 2 112 string("strpos")
0111 SEND_VAR CV3($code) 1
0112 SEND_VAL string("
TEMPLATE") 2
0113 V8 = DO_ICALL
0114 T7 = TYPE_CHECK TYPE [null, true, long, double, string, array, object, resource] V8
0115 JMPZ T7 0123
0116 INIT_FCALL 3 128 string("str_replace")
0117 SEND_VAL string("
TEMPLATE") 1
0118 SEND_VAL string("{$x}") 2
0119 SEND_VAR CV3($code) 3
0120 V8 = DO_ICALL
0121 T7 = QM_ASSIGN V8
0122 JMP 0124
0123 T7 = QM_ASSIGN CV3($code)
0124 VERIFY_RETURN_TYPE T7
0125 RETURN T7
LIVE RANGES:
     7: 0005 - 0109 (loop)
     8: 0007 - 0107 (tmp/var)
     7: 0124 - 0125 (tmp/var)

SM\MustacheContext::construct:
     ; (lines=23, args=3, vars=4, tmps=2)
     ; (after optimizer)
     ; E:\lab\sm-mustache\mustache.php:540-550
0000 CV0($engine) = RECV 1
0001 CV1($delims) = RECV 2
0002 CV2($context) = RECV 3
0003 CV3($stack) = QM_ASSIGN array(...)
0004 T4 = FETCH_OBJ_R CV0($engine) string("helpers")
0005 JMPZ T4 0013
0006 T5 = FETCH_OBJ_R CV0($engine) string("delims")
0007 T4 = IS_IDENTICAL CV1($delims) T5
0008 JMPZ T4 0013
0009 V4 = FETCH_OBJ_W (ref) CV0($engine) string("helpers")
0010 V5 = MAKE_REF V4
0011 V4 = FETCH_DIM_W CV3($stack) int(0)
0012 ASSIGN_REF V4 V5
0013 JMPZ CV2($context) 0016
0014 V4 = FETCH_DIM_W CV3($stack) int(1)
0015 ASSIGN_REF V4 CV2($context)
0016 V4 = NEW 3 (self) (exception)
0017 SEND_VAR CV0($engine) 1
0018 SEND_VAR CV1($delims) 2
0019 SEND_VAR CV3($stack) 3
0020 DO_FCALL
0021 VERIFY_RETURN_TYPE V4
0022 RETURN V4
LIVE RANGES:
     5: 0011 - 0012 (tmp/var)
     4: 0017 - 0021 (new)
     4: 0021 - 0022 (tmp/var)

SM\MustacheContext::__construct:
     ; (lines=13, args=4, vars=4, tmps=0)
     ; (after optimizer)
     ; E:\lab\sm-mustache\mustache.php:551-556
0000 CV0($engine) = RECV 1
0001 CV1($delims) = RECV 2
0002 CV2($stack) = RECV 3
0003 CV3($last) = RECV_INIT 4 int(1)
0004 ASSIGN_OBJ THIS string("engine")
0005 OP_DATA CV0($engine)
0006 ASSIGN_OBJ THIS string("delims")
0007 OP_DATA CV1($delims)
0008 ASSIGN_OBJ THIS string("stack")
0009 OP_DATA CV2($stack)
0010 ASSIGN_OBJ THIS string("last")
0011 OP_DATA CV3($last)
0012 RETURN null

SM\MustacheContext::__toString:
     ; (lines=1, args=0, vars=0, tmps=0)
     ; (after optimizer)
     ; E:\lab\sm-mustache\mustache.php:557-559
0000 RETURN string("
TEMPLATE")

SM\MustacheContext::__invoke:
     ; (lines=112, args=1, vars=6, tmps=3)
     ; (after optimizer)
     ; E:\lab\sm-mustache\mustache.php:560-601
0000 CV0($name) = RECV 1
0001 T6 = FETCH_DIM_R CV0($name) int(0)
0002 CV1($tag) = IS_IDENTICAL T6 string("&")
0003 JMPZ CV1($tag) 0009
0004 INIT_FCALL 2 112 string("substr")
0005 SEND_VAR CV0($name) 1
0006 SEND_VAL int(1) 2
0007 V6 = DO_ICALL
0008 ASSIGN CV0($name) V6
0009 T6 = IS_IDENTICAL CV0($name) string(".")
0010 JMPZ T6 0015
0011 T8 = FETCH_OBJ_R THIS string("last")
0012 T7 = FETCH_OBJ_R THIS string("stack")
0013 T6 = FETCH_DIM_R T7 T8
0014 JMP 0019
0015 INIT_METHOD_CALL 1 THIS string("v")
0016 SEND_VAR CV0($name) 1
0017 V7 = DO_FCALL
0018 T6 = QM_ASSIGN V7
0019 CV2($v) = QM_ASSIGN T6
0020 JMPNZ CV2($v) 0027
0021 T6 = IS_IDENTICAL CV2($v) int(0)
0022 JMPZ T6 0025
0023 T6 = QM_ASSIGN string("0")
0024 JMP 0026
0025 T6 = QM_ASSIGN string("")
0026 RETURN T6
0027 INIT_FCALL 1 96 string("is_callable")
0028 SEND_VAR CV2($v) 1
0029 CV3($isFunc) = DO_ICALL
0030 JMPZ CV3($isFunc) 0043
0031 T6 = INSTANCEOF CV2($v) string("Closure")
0032 JMPZ T6 0038
0033 INIT_DYNAMIC_CALL 1 CV2($v)
0034 SEND_VAL_EX string("") 1
0035 V7 = DO_FCALL
0036 T6 = QM_ASSIGN V7
0037 JMP 0042
0038 INIT_USER_CALL 1 string("call_user_func") CV2($v)
0039 SEND_USER string("") 1
0040 V7 = DO_FCALL
0041 T6 = QM_ASSIGN V7
0042 ASSIGN CV2($v) T6
0043 T6 = TYPE_CHECK (string) CV2($v)
0044 JMPZ T6 0105
0045 JMPZ CV3($isFunc) 0087
0046 T7 = FETCH_OBJ_R THIS string("engine")
0047 T6 = FETCH_OBJ_R T7 string("recur")
0048 JMPZ T6 0087
0049 INIT_FCALL 2 112 string("strpos")
0050 SEND_VAR CV2($v) 1
0051 T7 = FETCH_OBJ_R THIS string("delims")
0052 T6 = FETCH_DIM_R T7 int(0)
0053 SEND_VAL T6 2
0054 V7 = DO_ICALL
0055 T6 = TYPE_CHECK TYPE [null, true, long, double, string, array, object, resource] V7
0056 JMPZ T6 0087
0057 INIT_FCALL 2 112 string("strpos")
0058 SEND_VAR CV2($v) 1
0059 T8 = FETCH_OBJ_R THIS string("delims")
0060 T7 = FETCH_DIM_R T8 int(1)
0061 SEND_VAL T7 2
0062 V7 = DO_ICALL
0063 T6 = TYPE_CHECK TYPE [null, true, long, double, string, array, object, resource] V7
0064 JMPZ T6 0087
0065 T6 = FETCH_OBJ_R THIS string("engine")
0066 INIT_METHOD_CALL 2 T6 string("renderFunc")
0067 CHECK_FUNC_ARG 1
0068 V6 = FETCH_OBJ_FUNC_ARG (ref) THIS string("delims")
0069 SEND_FUNC_ARG V6 1
0070 SEND_VAR_EX CV2($v) 2
0071 V6 = DO_FCALL
0072 CV4($i) = QM_ASSIGN V6
0073 T6 = BW_NOT CV4($i)
0074 JMPZ T6 0084
0075 T6 = FETCH_OBJ_R THIS string("engine")
0076 T7 = FETCH_OBJ_R T6 string("func")
0077 T6 = FETCH_DIM_R T7 CV4($i)
0078 INIT_DYNAMIC_CALL 1 T6
0079 V6 = FETCH_THIS
0080 SEND_VAR_EX V6 1
0081 V7 = DO_FCALL
0082 T6 = QM_ASSIGN V7
0083 JMP 0085
0084 T6 = QM_ASSIGN string("")
0085 ASSIGN CV2($v) T6
0086 JMP 0103
0087 JMPNZ CV1($tag) 0103
0088 T6 = FETCH_OBJ_R THIS string("engine")
0089 CV5($f) = FETCH_OBJ_R T6 string("escaper")
0090 JMPZ CV5($f) 0103
0091 T6 = TYPE_CHECK (true) CV5($f)
0092 JMPZ T6 0098
0093 INIT_FCALL 1 96 string("htmlspecialchars")
0094 SEND_VAR CV2($v) 1
0095 V7 = DO_ICALL
0096 T6 = QM_ASSIGN V7
0097 JMP 0102
0098 INIT_DYNAMIC_CALL 1 CV5($f)
0099 SEND_VAR_EX CV2($v) 1
0100 V7 = DO_FCALL
0101 T6 = QM_ASSIGN V7
0102 ASSIGN CV2($v) T6
0103 VERIFY_RETURN_TYPE CV2($v)
0104 RETURN CV2($v)
0105 INIT_FCALL 1 96 string("is_numeric")
0106 SEND_VAR CV2($v) 1
0107 V6 = DO_ICALL
0108 JMPZ V6 0111
0109 T6 = CAST (string) CV2($v)
0110 RETURN T6
0111 RETURN string("")

SM\MustacheContext::f:
     ; (lines=237, args=2, vars=8, tmps=5)
     ; (after optimizer)
     ; E:\lab\sm-mustache\mustache.php:602-689
0000 CV0($name) = RECV 1
0001 CV1($inverted) = RECV 2
0002 CV2($i) = RECV_VARIADIC 3
0003 T9 = COUNT CV2($i)
0004 CV3($k) = IS_IDENTICAL T9 int(1)
0005 T8 = IS_IDENTICAL CV0($name) string(".")
0006 JMPZ T8 0011
0007 T10 = FETCH_OBJ_R THIS string("last")
0008 T9 = FETCH_OBJ_R THIS string("stack")
0009 T8 = FETCH_DIM_R T9 T10
0010 JMP 0015
0011 INIT_METHOD_CALL 1 THIS string("v")
0012 SEND_VAR CV0($name) 1
0013 V9 = DO_FCALL
0014 T8 = QM_ASSIGN V9
0015 CV4($v) = QM_ASSIGN T8
0016 JMPNZ CV4($v) 0055
0017 JMPZ CV3($k) 0032
0018 JMPZ CV1($inverted) 0029
0019 T10 = FETCH_DIM_R CV2($i) int(0)
0020 T8 = FETCH_OBJ_R THIS string("engine")
0021 T9 = FETCH_OBJ_R T8 string("func")
0022 T8 = FETCH_DIM_R T9 T10
0023 INIT_DYNAMIC_CALL 1 T8
0024 V8 = FETCH_THIS
0025 SEND_VAR_EX V8 1
0026 V8 = DO_FCALL
0027 T9 = QM_ASSIGN V8
0028 JMP 0030
0029 T9 = QM_ASSIGN string("")
0030 T8 = QM_ASSIGN T9
0031 JMP 0053
0032 JMPZ CV1($inverted) 0043
0033 T11 = FETCH_DIM_R CV2($i) int(0)
0034 T9 = FETCH_OBJ_R THIS string("engine")
0035 T10 = FETCH_OBJ_R T9 string("func")
0036 T9 = FETCH_DIM_R T10 T11
0037 INIT_DYNAMIC_CALL 1 T9
0038 V9 = FETCH_THIS
0039 SEND_VAR_EX V9 1
0040 V10 = DO_FCALL
0041 T9 = QM_ASSIGN V10
0042 JMP 0052
0043 T12 = FETCH_DIM_R CV2($i) int(1)
0044 T10 = FETCH_OBJ_R THIS string("engine")
0045 T11 = FETCH_OBJ_R T10 string("func")
0046 T10 = FETCH_DIM_R T11 T12
0047 INIT_DYNAMIC_CALL 1 T10
0048 V10 = FETCH_THIS
0049 SEND_VAR_EX V10 1
0050 V10 = DO_FCALL
0051 T9 = QM_ASSIGN V10
0052 T8 = QM_ASSIGN T9
0053 VERIFY_RETURN_TYPE T8
0054 RETURN T8
0055 INIT_FCALL 1 96 string("is_callable")
0056 SEND_VAR CV4($v) 1
0057 V8 = DO_ICALL
0058 JMPZ V8 0173
0059 T10 = FETCH_DIM_R CV2($i) int(0)
0060 T8 = FETCH_OBJ_R THIS string("engine")
0061 T9 = FETCH_OBJ_R T8 string("text")
0062 CV5($x) = FETCH_DIM_R T9 T10
0063 T8 = INSTANCEOF CV4($v) string("Closure")
0064 JMPZ T8 0070
0065 INIT_DYNAMIC_CALL 1 CV4($v)
0066 SEND_VAR_EX CV5($x) 1
0067 V9 = DO_FCALL
0068 T8 = QM_ASSIGN V9
0069 JMP 0074
0070 INIT_USER_CALL 1 string("call_user_func") CV4($v)
0071 SEND_USER CV5($x) 1
0072 V9 = DO_FCALL
0073 T8 = QM_ASSIGN V9
0074 ASSIGN CV4($v) T8
0075 JMPNZ CV4($v) 0114
0076 JMPZ CV3($k) 0091
0077 JMPZ CV1($inverted) 0088
0078 T10 = FETCH_DIM_R CV2($i) int(0)
0079 T8 = FETCH_OBJ_R THIS string("engine")
0080 T9 = FETCH_OBJ_R T8 string("func")
0081 T8 = FETCH_DIM_R T9 T10
0082 INIT_DYNAMIC_CALL 1 T8
0083 V8 = FETCH_THIS
0084 SEND_VAR_EX V8 1
0085 V8 = DO_FCALL
0086 T9 = QM_ASSIGN V8
0087 JMP 0089
0088 T9 = QM_ASSIGN string("")
0089 T8 = QM_ASSIGN T9
0090 JMP 0112
0091 JMPZ CV1($inverted) 0102
0092 T11 = FETCH_DIM_R CV2($i) int(0)
0093 T9 = FETCH_OBJ_R THIS string("engine")
0094 T10 = FETCH_OBJ_R T9 string("func")
0095 T9 = FETCH_DIM_R T10 T11
0096 INIT_DYNAMIC_CALL 1 T9
0097 V9 = FETCH_THIS
0098 SEND_VAR_EX V9 1
0099 V10 = DO_FCALL
0100 T9 = QM_ASSIGN V10
0101 JMP 0111
0102 T12 = FETCH_DIM_R CV2($i) int(1)
0103 T10 = FETCH_OBJ_R THIS string("engine")
0104 T11 = FETCH_OBJ_R T10 string("func")
0105 T10 = FETCH_DIM_R T11 T12
0106 INIT_DYNAMIC_CALL 1 T10
0107 V10 = FETCH_THIS
0108 SEND_VAR_EX V10 1
0109 V10 = DO_FCALL
0110 T9 = QM_ASSIGN V10
0111 T8 = QM_ASSIGN T9
0112 VERIFY_RETURN_TYPE T8
0113 RETURN T8
0114 JMPZ CV1($inverted) 0129
0115 JMPZ CV3($k) 0118
0116 T8 = QM_ASSIGN string("")
0117 JMP 0127
0118 T11 = FETCH_DIM_R CV2($i) int(1)
0119 T9 = FETCH_OBJ_R THIS string("engine")
0120 T10 = FETCH_OBJ_R T9 string("func")
0121 T9 = FETCH_DIM_R T10 T11
0122 INIT_DYNAMIC_CALL 1 T9
0123 V9 = FETCH_THIS
0124 SEND_VAR_EX V9 1
0125 V9 = DO_FCALL
0126 T8 = QM_ASSIGN V9
0127 VERIFY_RETURN_TYPE T8
0128 RETURN T8
0129 T8 = TYPE_CHECK (string) CV4($v)
0130 JMPZ T8 0188
0131 T9 = FETCH_OBJ_R THIS string("engine")
0132 T8 = FETCH_OBJ_R T9 string("recur")
0133 JMPZ T8 0171
0134 INIT_FCALL 2 112 string("strpos")
0135 SEND_VAR CV4($v) 1
0136 T10 = FETCH_OBJ_R THIS string("delims")
0137 T9 = FETCH_DIM_R T10 int(0)
0138 SEND_VAL T9 2
0139 V9 = DO_ICALL
0140 T8 = TYPE_CHECK TYPE [null, true, long, double, string, array, object, resource] V9
0141 JMPZ T8 0171
0142 INIT_FCALL 2 112 string("strpos")
0143 SEND_VAR CV4($v) 1
0144 T10 = FETCH_OBJ_R THIS string("delims")
0145 T9 = FETCH_DIM_R T10 int(1)
0146 SEND_VAL T9 2
0147 V9 = DO_ICALL
0148 T8 = TYPE_CHECK TYPE [null, true, long, double, string, array, object, resource] V9
0149 JMPZ T8 0171
0150 T8 = FETCH_OBJ_R THIS string("engine")
0151 INIT_METHOD_CALL 2 T8 string("renderFunc")
0152 CHECK_FUNC_ARG 1
0153 V8 = FETCH_OBJ_FUNC_ARG (ref) THIS string("delims")
0154 SEND_FUNC_ARG V8 1
0155 SEND_VAR_EX CV4($v) 2
0156 V8 = DO_FCALL
0157 CV6($j) = QM_ASSIGN V8
0158 T8 = BW_NOT CV6($j)
0159 JMPZ T8 0169
0160 T8 = FETCH_OBJ_R THIS string("engine")
0161 T9 = FETCH_OBJ_R T8 string("func")
0162 T8 = FETCH_DIM_R T9 CV6($j)
0163 INIT_DYNAMIC_CALL 1 T8
0164 V8 = FETCH_THIS
0165 SEND_VAR_EX V8 1
0166 V9 = DO_FCALL
0167 T8 = QM_ASSIGN V9
0168 JMP 0170
0169 T8 = QM_ASSIGN string("")
0170 ASSIGN CV4($v) T8
0171 VERIFY_RETURN_TYPE CV4($v)
0172 RETURN CV4($v)
0173 JMPZ CV1($inverted) 0188
0174 JMPZ CV3($k) 0177
0175 T8 = QM_ASSIGN string("")
0176 JMP 0186
0177 T11 = FETCH_DIM_R CV2($i) int(1)
0178 T9 = FETCH_OBJ_R THIS string("engine")
0179 T10 = FETCH_OBJ_R T9 string("func")
0180 T9 = FETCH_DIM_R T10 T11
0181 INIT_DYNAMIC_CALL 1 T9
0182 V9 = FETCH_THIS
0183 SEND_VAR_EX V9 1
0184 V9 = DO_FCALL
0185 T8 = QM_ASSIGN V9
0186 VERIFY_RETURN_TYPE T8
0187 RETURN T8
0188 T9 = TYPE_CHECK (array) CV4($v)
0189 T8 = ASSIGN CV5($x) T9
0190 JMPZ T8 0196
0191 INIT_FCALL 1 96 string("key")
0192 SEND_VAR CV4($v) 1
0193 V9 = DO_ICALL
0194 T8 = TYPE_CHECK (long) V9
0195 JMPNZ T8 0201
0196 JMPNZ CV5($x) 0221
0197 T9 = TYPE_CHECK (object) CV4($v)
0198 JMPZ T9 0221
0199 T8 = INSTANCEOF CV4($v) string("Traversable")
0200 JMPZ T8 0221
0201 ASSIGN CV5($x) string("")
0202 V8 = FE_RESET_RW CV4($v) 0219
0203 FE_FETCH_RW V8 CV7($w) 0219
0204 T11 = PRE_INC_OBJ THIS string("last")
0205 V10 = FETCH_OBJ_W (dim write) THIS string("stack")
0206 V9 = FETCH_DIM_W V10 T11
0207 ASSIGN_REF V9 CV7($w)
0208 T11 = FETCH_DIM_R CV2($i) int(0)
0209 T9 = FETCH_OBJ_R THIS string("engine")
0210 T10 = FETCH_OBJ_R T9 string("func")
0211 T9 = FETCH_DIM_R T10 T11
0212 INIT_DYNAMIC_CALL 1 T9
0213 V9 = FETCH_THIS
0214 SEND_VAR_EX V9 1
0215 V9 = DO_FCALL
0216 ASSIGN_OP (CONCAT) CV5($x) V9
0217 PRE_DEC_OBJ THIS string("last")
0218 JMP 0203
0219 FE_FREE V8
0220 JMP 0235
0221 T10 = PRE_INC_OBJ THIS string("last")
0222 V9 = FETCH_OBJ_W (dim write) THIS string("stack")
0223 V8 = FETCH_DIM_W V9 T10
0224 ASSIGN_REF V8 CV4($v)
0225 T10 = FETCH_DIM_R CV2($i) int(0)
0226 T8 = FETCH_OBJ_R THIS string("engine")
0227 T9 = FETCH_OBJ_R T8 string("func")
0228 T8 = FETCH_DIM_R T9 T10
0229 INIT_DYNAMIC_CALL 1 T8
0230 V8 = FETCH_THIS
0231 SEND_VAR_EX V8 1
0232 V8 = DO_FCALL
0233 ASSIGN CV5($x) V8
0234 PRE_DEC_OBJ THIS string("last")
0235 VERIFY_RETURN_TYPE CV5($x)
0236 RETURN CV5($x)
LIVE RANGES:
     8: 0053 - 0054 (tmp/var)
     8: 0112 - 0113 (tmp/var)
     8: 0127 - 0128 (tmp/var)
     8: 0186 - 0187 (tmp/var)
     8: 0203 - 0219 (loop)
     11: 0205 - 0206 (tmp/var)
     10: 0222 - 0223 (tmp/var)

SM\MustacheContext::v:
     ; (lines=128, args=1, vars=5, tmps=2)
     ; (after optimizer)
     ; E:\lab\sm-mustache\mustache.php:690-795
0000 CV0($name) = RECV 1
0001 INIT_FCALL 2 112 string("strpos")
0002 SEND_VAR CV0($name) 1
0003 SEND_VAL string(".") 2
0004 V6 = DO_ICALL
0005 T5 = TYPE_CHECK (false) V6
0006 JMPZ T5 0009
0007 CV1($dots) = QM_ASSIGN null
0008 JMP 0018
0009 INIT_FCALL 2 112 string("explode")
0010 SEND_VAL string(".") 1
0011 SEND_VAR CV0($name) 2
0012 V5 = DO_ICALL
0013 CV1($dots) = QM_ASSIGN V5
0014 INIT_FCALL 1 96 string("array_shift")
0015 SEND_REF CV1($dots) 1
0016 V5 = DO_ICALL
0017 ASSIGN CV0($name) V5
0018 CV2($v) = QM_ASSIGN string("")
0019 CV3($i) = FETCH_OBJ_R THIS string("last")
0020 JMP 0056
0021 V5 = FETCH_OBJ_W (dim write) THIS string("stack")
0022 V6 = FETCH_DIM_W V5 CV3($i)
0023 V5 = ASSIGN_REF CV4($x) V6
0024 JMPZ V5 0055
0025 T5 = TYPE_CHECK (array) CV4($x)
0026 JMPZ T5 0032
0027 T5 = ARRAY_KEY_EXISTS CV0($name) CV4($x)
0028 JMPZ T5 0055
0029 V5 = FETCH_DIM_W CV4($x) CV0($name)
0030 ASSIGN_REF CV2($v) V5
0031 JMP 0058
0032 T5 = TYPE_CHECK (object) CV4($x)
0033 JMPZ T5 0055
0034 T5 = ISSET_ISEMPTY_PROP_OBJ (isset) CV4($x) CV0($name)
0035 JMPZ T5 0039
0036 V5 = FETCH_OBJ_W (ref) CV4($x) CV0($name)
0037 ASSIGN_REF CV2($v) V5
0038 JMP 0058
0039 INIT_FCALL 2 112 string("method_exists")
0040 SEND_VAR CV4($x) 1
0041 SEND_VAR CV0($name) 2
0042 V5 = DO_ICALL
0043 JMPZ V5 0055
0044 JMPNZ CV1($dots) 0051
0045 INIT_STATIC_METHOD_CALL 1 string("Closure") string("fromCallable")
0046 T5 = INIT_ARRAY 2 (packed) CV4($x) NEXT
0047 T5 = ADD_ARRAY_ELEMENT CV0($name) NEXT
0048 SEND_VAL T5 1
0049 V5 = DO_FCALL
0050 RETURN V5
0051 INIT_METHOD_CALL 0 CV4($x) CV0($name)
0052 V5 = DO_FCALL
0053 ASSIGN_REF (function) CV2($v) V5
0054 JMP 0058
0055 PRE_DEC CV3($i)
0056 T5 = IS_SMALLER_OR_EQUAL int(0) CV3($i)
0057 JMPNZ T5 0021
0058 JMPZ CV2($v) 0060
0059 JMPNZ CV1($dots) 0061
0060 RETURN CV2($v)
0061 INIT_FCALL 1 96 string("array_pop")
0062 SEND_REF CV1($dots) 1
0063 V5 = DO_ICALL
0064 ASSIGN CV0($name) V5
0065 V5 = FE_RESET_R CV1($dots) 0102
0066 FE_FETCH_R V5 CV3($i) 0102
0067 T6 = TYPE_CHECK (array) CV2($v)
0068 JMPZ T6 0084
0069 T6 = ISSET_ISEMPTY_DIM_OBJ (isset) CV2($v) CV3($i)
0070 JMPZ T6 0100
0071 INIT_FCALL 1 96 string("is_callable")
0072 T6 = FETCH_DIM_R CV2($v) CV3($i)
0073 SEND_VAL T6 1
0074 V6 = DO_ICALL
0075 JMPZ V6 0081
0076 T6 = FETCH_DIM_R CV2($v) CV3($i)
0077 INIT_DYNAMIC_CALL 0 T6
0078 V6 = DO_FCALL
0079 ASSIGN_REF (function) CV2($v) V6
0080 JMP 0066
0081 V6 = FETCH_DIM_W CV2($v) CV3($i)
0082 ASSIGN_REF CV2($v) V6
0083 JMP 0066
0084 T6 = TYPE_CHECK (object) CV2($v)
0085 JMPZ T6 0100
0086 T6 = ISSET_ISEMPTY_PROP_OBJ (isset) CV2($v) CV0($name)
0087 JMPZ T6 0091
0088 V6 = FETCH_OBJ_W (ref) CV2($v) CV0($name)
0089 ASSIGN_REF CV2($v) V6
0090 JMP 0066
0091 INIT_FCALL 2 112 string("method_exists")
0092 SEND_VAR CV0($name) 1
0093 SEND_VAR CV2($v) 2
0094 V6 = DO_ICALL
0095 JMPZ V6 0100
0096 INIT_METHOD_CALL 0 CV2($v) CV0($name)
0097 V6 = DO_FCALL
0098 ASSIGN_REF (function) CV2($v) V6
0099 JMP 0066
0100 FE_FREE V5
0101 RETURN string("")
0102 FE_FREE V5
0103 T5 = TYPE_CHECK (array) CV2($v)
0104 JMPZ T5 0110
0105 T5 = ISSET_ISEMPTY_DIM_OBJ (isset) CV2($v) CV0($name)
0106 JMPZ T5 0109
0107 T5 = FETCH_DIM_R CV2($v) CV0($name)
0108 RETURN T5
0109 RETURN string("")
0110 T5 = TYPE_CHECK (object) CV2($v)
0111 JMPZ T5 0127
0112 T5 = ISSET_ISEMPTY_PROP_OBJ (isset) CV2($v) CV0($name)
0113 JMPZ T5 0116
0114 T5 = FETCH_OBJ_R CV2($v) CV0($name)
0115 RETURN T5
0116 INIT_FCALL 2 112 string("method_exists")
0117 SEND_VAR CV0($name) 1
0118 SEND_VAR CV2($v) 2
0119 V5 = DO_ICALL
0120 JMPZ V5 0127
0121 INIT_STATIC_METHOD_CALL 1 string("Closure") string("fromCallable")
0122 T5 = INIT_ARRAY 2 (packed) CV2($v) NEXT
0123 T5 = ADD_ARRAY_ELEMENT CV0($name) NEXT
0124 SEND_VAL T5 1
0125 V5 = DO_FCALL
0126 RETURN V5
0127 RETURN string("")
LIVE RANGES:
     5: 0047 - 0048 (tmp/var)
     5: 0066 - 0102 (loop)
     5: 0123 - 0124 (tmp/var)
